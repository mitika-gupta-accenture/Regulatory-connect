name: SonarQube-Scan

on:
  workflow_call:
    inputs:
      app_name:
        default: rc-nextjs-app
        required: true
        type: string
      artifact_destination:
        required: true
        type: string
        default: Github
      nexus_artifact_group_id:
        required: false
        type: string
      nexus_artifact_id:
        required: false
        type: string
    secrets:
      SonarAccessToken:
        required: true

jobs:
  SonarQube-SAST:
    runs-on: gp-prod-runner-set
    env:
      sonar_host_url: 'https://devops-platform.mhra.gov.uk/sonarqube'
      # nexus_artifact_repository: Regulatory-connect
      nexus_artifact_repository: releases
      nexus_server: https://devops-platform.mhra.gov.uk/nexus
    steps:
      - name: "Cleaning up Workspace"
        working-directory: ${{ github.workspace }}
        run: |
          echo "Cleaning up previous run"
          pwd
          ls -al '${{ github.workspace }}'
          rm -rf *
          ls -al '${{ github.workspace }}'

      - name: "Generate short ref name"
        run: |
          branch_name=$(echo ${{ github.event.pull_request.head.ref }}${{ github.event.ref }} | sed 's/refs\/heads\///g' | sed 's/refs\/tags\///g')
          echo "branch_name=$branch_name" >> $GITHUB_ENV

      - name: "Download artifact for Sonarqube Scan"
        if: ${{ inputs.artifact_destination == 'Github' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.app_name }}

      - name: "Download artifact from Nexus for Sonarqube Scan"
        if: ${{ inputs.artifact_destination == 'Nexus' }}
        run: |
          echo "Version: ${{ github.run_number }}"
          echo "Nexus Artifact Name: ${{ inputs.nexus_artifact_id }}"
          echo "Version: ${{ github.run_number }}"
          echo "Artifact Repository: ${{ env.nexus_artifact_repository }}"
          echo "Group Id: ${{ inputs.nexus_artifact_group_id }}"

          mvn -X -D"transitive=false" \
          -D"artifactId=${{ inputs.nexus_artifact_id }}" \
          -D"groupId=${{ inputs.nexus_artifact_group_id }}" \
          -D"remoteRepositories=${{ env.nexus_artifact_repository }}::default::${{ env.nexus_server }}" \
          -D"packaging=zip" \
          -D"dest=${{ github.workspace }}" \
          -D"version=${{ github.run_number }}" \
          org.apache.maven.plugins:maven-dependency-plugin:2.8:get

          echo "Update artifact name"
          mv ${{ inputs.nexus_artifact_id }}-${{ github.run_number }}.zip ${{ inputs.app_name }}.zip

      - name: "Unzip"
        run: |
          unzip -q -o ${{ inputs.app_name }}.zip
          echo "list files"
          ls -lart

      - name: "Set Sonar Project Name"
        run: |
          # Providing sonarproject value as per the branch
          if [[ (${{ env.branch_name }} == 'main') || (${{ env.branch_name }} == 'develop') || (${{ env.branch_name }} == 'sit') ]]
          then 
            sonarproject="${{ inputs.app_name }}_${{ env.branch_name }}"
          elif [[ ${{ env.branch_name }} == release/* ]]
          then
            sonarproject="${{ inputs.app_name }}_Release"
          else
            branch_name=$(echo ${{ env.branch_name }} | sed 's/\//-/g')
            sonarproject="${{ inputs.app_name }}-$branch_name"
          fi

          echo "Sonar Project Name: $sonarproject"

          # Set env variable for next step
          echo "sonarproject=$sonarproject" >> $GITHUB_ENV

      - name: "Run code through SonarQube"
        run: |
          # Running SonarQube
          /opt/sonar-scanner/bin/sonar-scanner -Dsonar.login=${{ secrets.SonarAccessToken }} \
          -DskipTests=true -Dsonar.host.url=${{ env.sonar_host_url }} \
          -Dsonar.projectKey=${{ env.sonarproject }} -Dsonar.buildbreaker.queryMaxAttempts=50 \
          -Dsonar.buildbreaker.queryInterval=50000 \
          -DJVMOptions="-Xms1024m -Xmx3072m" \
          -Dsonar.javascript.lcov.reportPaths="${{ github.workspace }}/coverage/lcov.info" \
          -Dsonar.sources=app,core/components \
          -Dsonar.exclusions=**/node_modules/**,**/src/authConfig.ts,**/src/bootstrap.tsx,**/src/index.ts,**/src/reportWebVitals.ts,**/src/App.css,**/src/setupTests.ts,**/src/components/**/**.test.tsx \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.qualitygate.timeout=600 \
          -Dsonar.scanner.responseTimeout=120
